<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>02- JavaScript (API)</title>
    <link rel="stylesheet" href="../master.css">
    <style>
        section.characters{
            display: grid;
            grid-template-columns: repeat(5, 220px);
            margin: 2rem 0 5rem 0;
            gap: 1rem;
            div.character{
                border: 4px solid #fff;
                border-radius: 8px;
                position: relative;
                overflow: hidden;
                height: 220px;
                width: 220px;
                article,
                img{
                    position: absolute;
                    border-radius: 8px;
                }
                article{
                    background-color: #000c;
                    z-index: 1;
                    bottom: -100px;
                    padding: 0.4rem;
                    transition: bottom 0.4s ease-in;
                    width: 100%;
                    h4, h5{
                        color: #fff;
                    }
                    .Alive{
                        color: #adff2f;
                    }
                    .Dead{
                        color: #dc143c;
                    }
                    button.btn-show{
                        border:none;
                        border-radius: 25px;
                        cursor: pointer;
                        padding: 0.2rem 0.4rem;
                        font-size: 0.8rem;
                        transition: transform 0.2 ease-in;
                        font-size:0.8rem;
                        &:hover{
                            transform: scale(1.15);
                        }
                    }
                }
               &:hover article{
                    bottom: 0;
               }
                img{
                    object-fit: cover;
                }
            }
        }
        div.modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1000; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        
        div.modal-content {
            background-color: #fefefe;
            margin: 15% auto; /* 15% from the top and centered */
            padding: 20px;
            border: 1px solid #888;
            width: 80%; /* Could be more or less, depending on screen size */
            border-radius: 8px;
        
        span.close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    }
    }    
        @media screen and (max-width: 1190px){
            section.characters {
                grid-template-columns: repeat(4,220px)
            }
        }
        @media screen and (max-width: 960px){
            section.characters {
                grid-template-columns: repeat(3,220px)
            }
        }
        @media screen and (max-width: 720px){
            section.characters {
                grid-template-columns: repeat(2,220px)
            }
        }
    
    </style>
    </head>
<body class="level2">
   <nav>
      <a href="../index.html">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path fill="#ff9" d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"/></svg></a></nav> 
   <main>
     <header>
        <h1>02- JavaScript (API)</h1>
        <h2>Consumir un servicio por medio de Js</h2>
     </header>

     <div class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <div class="info"></div>
        </div>
     </div>

     <section class="characters">
     </section>
   </main>
   <script>
    //ELEMENTS
    const characters = document.querySelector('.characters');
    const modal = document.querySelector('.modal');
    const modalContent = document.querySelector('.modal .info');
    const span = document.querySelector('.close');
       
    //FETCH ALL CHARACTERS
        const fetchCaracters = async () => {
            for (let i=1; i <=30; i++) {

                const url= 'https://rickandmortyapi.com/api/character/'+i
                 await fetch(url)
                     .then((response) => response.json())
                     .then((data) => {
                         //console.log(data)//mostrar en consola  data muestra toda la informacion del personaje
                        // console.log(data.name) muestra solo el nombre en consola
                        characters.innerHTML += '<div class="character">\
                                                    <article>\
                                                        <h4>'+data.name.substring(0,16)+'</h4>\
                                                        <h5 class="'+data.status+'">'+data.status+'</h5>\
                                                        <button class="btn-show" data-id="'+data.id+'">+ Info</button>\
                                                    </article>\
                                                    <img src="'+data.image+'">\
                                                </div>'
                     })
            }
            addClickEvents()
        }

        const fetchInformation= async (id) => {
            const url= 'https://rickandmortyapi.com/api/character/'+i
            await fetch(url)
                .then((response) => response.json())
                .then((data) => {
                    modalContent.innerHTML += '<h2>'+data.name+'</>h2\
                                                <p>Species:'+data.species+'</p>\
                                                <p>Gender:'+data.gender+'</p>\
                                                <p>Type:'+data.type+'</p>\
                                                <p>Origin'+data.origin+'</p>\
                                                <img src="'+data.image+'">'
                        modal.style.display = "block";                
                    });
            addClickEvents()
        }

        function addClickEvents() {
            const btnsShow = document.querySelectorAll('.btn-show');

            btnsShow.forEach(element => {
                element.addEventListener('click', function() {
                    alert(this.getAttribute('data-id'))
            })
        })
    }
    span.onclick = function() {
        modal.style.display = "none";
    }
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }   
    }
        fetchCaracters()
   </script>
</body>
</html>
